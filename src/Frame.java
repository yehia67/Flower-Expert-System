/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.clipsrules.jni.Environment;
import net.sf.clipsrules.jni.FactAddressValue;
import net.sf.clipsrules.jni.MultifieldValue;
import net.sf.clipsrules.jni.PrimitiveValue;
import net.sf.clipsrules.jni.SymbolValue;
/**
 *
 * @author Mohammed
 */
public class Frame extends javax.swing.JFrame {
  Environment clips = new Environment();
  
    /**
     * Creates new form FlowerExpertSystem
     */
    public Frame() {
         clips.loadFromResource("/flower.clp");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jComboBox8 = new javax.swing.JComboBox<>();
        //textField1 = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        textField3 = new java.awt.TextField();
       /*  Environment clips = new Environment();
         clips.loadFromResource("/flower.clp");*/

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("What is the size of the flower ?");

        jSlider1.setMaximum(200);
        jSlider1.setMinimum(10);
        jSlider1.setValue(10);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        
        
        jLabel2.setText("What is the life cycle of the flower ?");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "One year", "More than one year" }));

        jLabel3.setText("What is the season of the Flower?");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "summer", "autumn", "Spring", "Winter" }));

        jLabel4.setText("What is the color of the flower?");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "Blue", "Purple", "Red", "Yellow", "White", "Pink", "Orange", "Violate", "Pinkish-red" }));

        jLabel5.setText("What is the Root Type of the flower?");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "Bulb", "Root" }));

        jLabel6.setText("What is the Name of the flower?");

        jLabel7.setText("What is soil type of the flower ?");

        jLabel8.setText("What is the Life Type of the flower?");

        jLabel9.setText("Does the flower has Perfume ?");

       // jLabel10.setText("The name of the flower is:");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "Iris", "Anemone", "Chrysanthemum","Freesia","Dahlia","Narcissus","Camellias","Begonia","Lily","Roses","White lily","Azaleas" }));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "Acidic", "Loose", "Fertile", "Rich", "Well-drained" }));

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "Perennial", "Annual" }));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one", "True", "False" }));

       // textField1.setText("textField1");

        jButton1.setText("Submit");
        
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (Exception ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        textField3.setText(String.valueOf(jSlider1.getValue()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                //.addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                //.addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3)
                                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            ))
                        .addGroup(layout.createSequentialGroup()
                        .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
                );
        
        pack();
       
        
        
    }// </editor-fold>                        

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {                                      
        // TODO add your handling code here:
       
        textField3.setText(String.valueOf(jSlider1.getValue()));
    }          
    
     private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws Exception {                                         
        // TODO add your handling code here:
        
         //Check the size of the flower 
         
         //if(jSlider1.getValue()>10)
         System.out.println("Jslider value : " + jSlider1.getValue());
          clips.eval("(assert (size (no " +jSlider1.getValue()+ ")))");
         // Check the Life type of the flower 
         String lifeCycle = jComboBox2.getSelectedItem().toString();
         String Perfume = jComboBox8.getSelectedItem().toString();
         if(lifeCycle.equals("One year"))
         {
             clips.eval("(assert (life_cycle (cycle 1)))");
         }
        else if(lifeCycle.equals("More than one year")) 
         {
             clips.eval("(assert (life_cycle (cycle 5)))");
         }
         
         if(Perfume.equals("True")){
         clips.eval(  "(assert(perfume (flag 1)))" );
        }else if(Perfume.equals("False")){
         clips.eval(  "(assert(perfume (flag 0)))" );
        }
         
         // Check the for flower irise 
         String season  = jComboBox1.getSelectedItem().toString(); 
         String color  = jComboBox3.getSelectedItem().toString();
         String lifeType  = jComboBox7.getSelectedItem().toString();
         String rootType  = jComboBox4.getSelectedItem().toString();
         String soil     = jComboBox6.getSelectedItem().toString();
         //String flowerName = jComboBox5.getSelectedItem().toString();
         if(!season.equals("Select one")){
         clips.eval("(assert(season (name "+ season.toLowerCase() +")))");
         }
          if(!color.equals("Select one")){
           clips.eval(  "(assert(color (name "+ color.toLowerCase()+")))" );
          }
         if(!lifeType.equals("Select one")){
            clips.eval("(assert(life_type (type "+ lifeType.toLowerCase() +")))");
         }
         if(!rootType.equals("Select one")){
          clips.eval("(assert(root_type  (type "+ rootType.toLowerCase() +")))");
         }
         if(!soil.equals("Select one")){
            clips.eval("(assert(soil  (type "+ soil.toLowerCase() +")))");
         }
        /* if(!flowerName.equals("Select one")){
          clips.eval("(assert(flower_name  (name "+ flowerName.toLowerCase() +")))");
         }*/
         
         

        
      
          
         /* if(season.equals("Summer") && color.equals("blue") && lifeType.equals("Perennial") ) 
         {
             clips.eval("(assert (flower_name (name irise)))");
         }*/
         
         //clips.reset();
         clips.run();
         MultifieldValue flowersFacts = null;
         FactAddressValue heightFact = null;
         FactAddressValue lifeTypeFact = null;
         try{
        /*PrimitiveValue value=clips.eval("(facts)");
        FactAddressValue fv = (FactAddressValue) ((MultifieldValue) clips.eval("(find-fact ((?f flower_name)) TRUE)")).get(0);
        FactAddressValue height_fact = (FactAddressValue) ((MultifieldValue) clips.eval("(find-fact ((?f height)) TRUE)")).get(0);
        MultifieldValue flowersHeight = ((MultifieldValue) clips.eval("(find-fact ((?f height)) TRUE)"));
        for(int i = 0; i < flowersHeight.size(); i++) {
            FactAddressValue factValue =  ((FactAddressValue)flowersHeight.get(i));
            System.out.println("flower " + i + " size  = " + factValue);
        }
        //String height = height_fact.getFactSlot("name").toString() ; +"  "+height
       // String ou = fv.getFactSlot("name").toString() ; 
        //String ou = value.toString() ;
        //System.out.println(fv) ;
        //System.out.println(ou) ;
        System.out.println(fv);*/
        
        //JOptionPane.showMessageDialog(this,"The Flower name is:"+ height_fact );
        //textField1.setText(ou);
            PrimitiveValue value=clips.eval("(facts)");
            flowersFacts = ((MultifieldValue) clips.eval("(find-all-facts ((?f flower_name)) TRUE)"));
            heightFact = (FactAddressValue) ((MultifieldValue) clips.eval("(find-fact ((?f height)) TRUE)")).get(0);
            lifeTypeFact =  (FactAddressValue) ((MultifieldValue) clips.eval("(find-fact ((?f life_type)) TRUE)")).get(0);
            
            String flowerFactString = "";
            String heightFactString = "";
            String lifeTypeFactString = "";
            
            if(flowersFacts.size() > 1) {
                for(int i = 0; i < flowersFacts.size(); i++) {

                   FactAddressValue fact = (FactAddressValue) flowersFacts.get(i);
                   String flowerName = fact.getFactSlot("name").toString();
                   flowerFactString += "flower " + (i + 1) + 
                           " name is : " + flowerName + "\n";
                }
            } else {
               FactAddressValue fact = (FactAddressValue) flowersFacts.get(0);
               String flowerName = fact.getFactSlot("name").toString();
               flowerFactString += "flower name is : " + flowerName;
            }
            
            /*String heightVal = heightFact.getFactSlot("name").toString();
            heightFactString = "Height is : " + heightVal;
            
            String lifeTypeVal = lifeTypeFact.getFactSlot("type").toString();
            lifeTypeFactString = "Life Type is : " + lifeTypeVal;*/
            
            ResultFrame rf = new ResultFrame(flowerFactString);
            rf.setVisible(true);
            
         } catch (Exception ex) {
             System.out.println(ex.toString());
             String flowerFactString = null;
             if(flowersFacts != null && flowersFacts.size() != 0) {
                 flowerFactString = "" ;
                 if(flowersFacts.size() > 1) {
                     for(int i = 0; i < flowersFacts.size(); i++) {
                         
                        FactAddressValue fact = (FactAddressValue) flowersFacts.get(i);
                        String flowerName = fact.getFactSlot("name").toString();
                        flowerFactString += "flower " + (i + 1) + 
                           " name is : " + flowerName + "\n";
                     }
                 } else {
                    FactAddressValue fact = (FactAddressValue) flowersFacts.get(0);
                    String flowerName = fact.getFactSlot("name").toString();
                    flowerFactString += "flower name is : " + flowerName;
                 }
             }
             
             /*if(heightFact != null) {
                 String heightVal = heightFact.getFactSlot("name").toString();
                 heightFactString = heightVal;
             }
             
             if(lifeTypeFact != null) {
                 String lifeTypeVal = lifeTypeFact.getFactSlot("type").toString();
                 lifeTypeFactString = lifeTypeVal;
             }*/
             
             ResultFrame rf = new ResultFrame(flowerFactString);
            rf.setVisible(true);
         }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider jSlider1;
    //private java.awt.TextField textField1;
    private java.awt.TextField textField3;
    // End of variables declaration                   
}
